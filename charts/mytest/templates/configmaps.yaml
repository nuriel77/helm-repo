---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "cm-pulsar-broker"
  labels:
    app: pulsar
    chart: pulsar-2.7.6
    release: cm
    heritage: Helm
    cluster: cm-pulsar
    component: broker
data:
  # Metadata settings
  zookeeperServers: "cm-pulsar-zookeeper:2181"
  configurationStoreServers: "cm-pulsar-zookeeper:2181"

  # Broker settings
  clusterName: cm-pulsar
  exposeTopicLevelMetricsInPrometheus: "true"
  numHttpServerThreads: "8"
  zooKeeperSessionTimeoutMillis: "30000"
  statusFilePath: "/pulsar/status"

  # Function Worker Settings
  # function worker configuration
  functionsWorkerEnabled: "true"
  PF_functionRuntimeFactoryClassName: "org.apache.pulsar.functions.runtime.kubernetes.KubernetesRuntimeFactory"
  PF_pulsarFunctionsCluster: cm-pulsar
  PF_connectorsDirectory: ./connectors
  PF_containerFactory: k8s
  PF_numFunctionPackageReplicas: "2"
  # support version >= 2.5.0
  PF_functionRuntimeFactoryConfigs_pulsarRootDir: /pulsar
  PF_kubernetesContainerFactory_pulsarRootDir: /pulsar
  PF_functionRuntimeFactoryConfigs_pulsarDockerImageName: "apachepulsar/pulsar-all:2.7.2"
  PF_functionRuntimeFactoryConfigs_submittingInsidePod: "true"
  PF_functionRuntimeFactoryConfigs_installUserCodeDependencies: "true"
  PF_functionRuntimeFactoryConfigs_jobNamespace: pulsar
  PF_functionRuntimeFactoryConfigs_expectedMetricsCollectionInterval: "30"
  PF_functionRuntimeFactoryConfigs_pulsarAdminUrl: "http://cm-pulsar-broker:8080/"
  PF_functionRuntimeFactoryConfigs_pulsarServiceUrl: "pulsar://cm-pulsar-broker:6650/"
  PF_functionRuntimeFactoryConfigs_changeConfigMap: "cm-pulsar-functions-worker-config"
  PF_functionRuntimeFactoryConfigs_changeConfigMapNamespace: pulsar
  # support version < 2.5.0
  PF_kubernetesContainerFactory_pulsarDockerImageName: "apachepulsar/pulsar-all:2.7.2"
  PF_kubernetesContainerFactory_submittingInsidePod: "true"
  PF_kubernetesContainerFactory_installUserCodeDependencies: "true"
  PF_kubernetesContainerFactory_jobNamespace: pulsar
  PF_kubernetesContainerFactory_expectedMetricsCollectionInterval: "30"
  PF_kubernetesContainerFactory_pulsarAdminUrl: "http://cm-pulsar-broker:8080/"
  PF_kubernetesContainerFactory_pulsarServiceUrl: "pulsar://cm-pulsar-broker:6650/"
  PF_kubernetesContainerFactory_changeConfigMap: "cm-pulsar-functions-worker-config"
  PF_kubernetesContainerFactory_changeConfigMapNamespace: pulsar

  # prometheus needs to access /metrics endpoint
  webServicePort: "8080"
  brokerServicePort: "6650"

  # Authentication Settings
  PULSAR_EXTRA_OPTS: -Dpulsar.log.root.level=info
  PULSAR_GC: "-XX:+UseG1GC"
  PULSAR_LOG_LEVEL: info
  PULSAR_LOG_ROOT_LEVEL: info
  PULSAR_MEM: "-Xms2g -Xmx3g -XX:MaxDirectMemorySize=3g -Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.linkCapacity=1024 -XX:+ExitOnOutOfMemoryError"
  backlogQuotaDefaultRetentionPolicy: producer_exception
  brokerDeduplicationEnabled: "false"
  exposeConsumerLevelMetricsInPrometheus: "false"
  managedLedgerDefaultAckQuorum: "2"
  managedLedgerDefaultEnsembleSize: "2"
  managedLedgerDefaultWriteQuorum: "2"

---
# deploy zookeeper only when `components.zookeeper` is true
apiVersion: v1
kind: ConfigMap
metadata:
  name: "cm-pulsar-zookeeper"
  labels:
    app: pulsar
    chart: pulsar-2.7.6
    release: cm
    heritage: Helm
    cluster: cm-pulsar
    component: zookeeper
data:
  dataDir: /pulsar/data/zookeeper
  PULSAR_PREFIX_serverCnxnFactory: org.apache.zookeeper.server.NettyServerCnxnFactory
  serverCnxnFactory: org.apache.zookeeper.server.NettyServerCnxnFactory
  # enable zookeeper tls
  PULSAR_EXTRA_OPTS: -Dzookeeper.tcpKeepAlive=true -Dzookeeper.clientTcpKeepAlive=true -Dpulsar.log.root.level=info
  PULSAR_GC: "-XX:+UseG1GC"
  PULSAR_LOG_LEVEL: info
  PULSAR_LOG_ROOT_LEVEL: info
  PULSAR_MEM: "-Xms6g -Xmx12g -Dcom.sun.management.jmxremote -Djute.maxbuffer=10485760"
